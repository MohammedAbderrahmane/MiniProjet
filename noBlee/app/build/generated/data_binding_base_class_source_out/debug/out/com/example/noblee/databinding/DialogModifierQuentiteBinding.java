// Generated by view binder compiler. Do not edit!
package com.example.noblee.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.noblee.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogModifierQuentiteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText dialogQuentiteQuentite;

  @NonNull
  public final SeekBar dialogQuentiteSeekbar;

  @NonNull
  public final TextView dialogQuentiteStatue;

  @NonNull
  public final TextView dialogQuentiteTextview;

  private DialogModifierQuentiteBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText dialogQuentiteQuentite, @NonNull SeekBar dialogQuentiteSeekbar,
      @NonNull TextView dialogQuentiteStatue, @NonNull TextView dialogQuentiteTextview) {
    this.rootView = rootView;
    this.dialogQuentiteQuentite = dialogQuentiteQuentite;
    this.dialogQuentiteSeekbar = dialogQuentiteSeekbar;
    this.dialogQuentiteStatue = dialogQuentiteStatue;
    this.dialogQuentiteTextview = dialogQuentiteTextview;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogModifierQuentiteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogModifierQuentiteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_modifier_quentite, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogModifierQuentiteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dialog_quentite_quentite;
      EditText dialogQuentiteQuentite = ViewBindings.findChildViewById(rootView, id);
      if (dialogQuentiteQuentite == null) {
        break missingId;
      }

      id = R.id.dialog_quentite_seekbar;
      SeekBar dialogQuentiteSeekbar = ViewBindings.findChildViewById(rootView, id);
      if (dialogQuentiteSeekbar == null) {
        break missingId;
      }

      id = R.id.dialog_quentite_statue;
      TextView dialogQuentiteStatue = ViewBindings.findChildViewById(rootView, id);
      if (dialogQuentiteStatue == null) {
        break missingId;
      }

      id = R.id.dialog_quentite_textview;
      TextView dialogQuentiteTextview = ViewBindings.findChildViewById(rootView, id);
      if (dialogQuentiteTextview == null) {
        break missingId;
      }

      return new DialogModifierQuentiteBinding((ConstraintLayout) rootView, dialogQuentiteQuentite,
          dialogQuentiteSeekbar, dialogQuentiteStatue, dialogQuentiteTextview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
