// Generated by view binder compiler. Do not edit!
package com.example.noblee.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.noblee.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button loginBtn;

  @NonNull
  public final EditText loginEmailEd;

  @NonNull
  public final EditText loginMotpassEd;

  @NonNull
  public final TextView loginStatue;

  @NonNull
  public final TextView toRegisterActivity;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button loginBtn,
      @NonNull EditText loginEmailEd, @NonNull EditText loginMotpassEd,
      @NonNull TextView loginStatue, @NonNull TextView toRegisterActivity) {
    this.rootView = rootView;
    this.loginBtn = loginBtn;
    this.loginEmailEd = loginEmailEd;
    this.loginMotpassEd = loginMotpassEd;
    this.loginStatue = loginStatue;
    this.toRegisterActivity = toRegisterActivity;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.login_btn;
      Button loginBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginBtn == null) {
        break missingId;
      }

      id = R.id.login_email_ed;
      EditText loginEmailEd = ViewBindings.findChildViewById(rootView, id);
      if (loginEmailEd == null) {
        break missingId;
      }

      id = R.id.login_motpass_ed;
      EditText loginMotpassEd = ViewBindings.findChildViewById(rootView, id);
      if (loginMotpassEd == null) {
        break missingId;
      }

      id = R.id.login_statue;
      TextView loginStatue = ViewBindings.findChildViewById(rootView, id);
      if (loginStatue == null) {
        break missingId;
      }

      id = R.id.to_registerActivity;
      TextView toRegisterActivity = ViewBindings.findChildViewById(rootView, id);
      if (toRegisterActivity == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, loginBtn, loginEmailEd,
          loginMotpassEd, loginStatue, toRegisterActivity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
