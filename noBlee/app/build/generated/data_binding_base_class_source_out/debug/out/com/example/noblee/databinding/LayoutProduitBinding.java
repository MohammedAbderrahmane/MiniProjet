// Generated by view binder compiler. Do not edit!
package com.example.noblee.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.noblee.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutProduitBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton produitBuyBtn;

  @NonNull
  public final ImageView produitImage;

  @NonNull
  public final TextView produitNomText;

  @NonNull
  public final TextView produitPrixText;

  private LayoutProduitBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton produitBuyBtn, @NonNull ImageView produitImage,
      @NonNull TextView produitNomText, @NonNull TextView produitPrixText) {
    this.rootView = rootView;
    this.produitBuyBtn = produitBuyBtn;
    this.produitImage = produitImage;
    this.produitNomText = produitNomText;
    this.produitPrixText = produitPrixText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutProduitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutProduitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_produit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutProduitBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.produit_buy_btn;
      ImageButton produitBuyBtn = ViewBindings.findChildViewById(rootView, id);
      if (produitBuyBtn == null) {
        break missingId;
      }

      id = R.id.produit_image;
      ImageView produitImage = ViewBindings.findChildViewById(rootView, id);
      if (produitImage == null) {
        break missingId;
      }

      id = R.id.produit_nom_text;
      TextView produitNomText = ViewBindings.findChildViewById(rootView, id);
      if (produitNomText == null) {
        break missingId;
      }

      id = R.id.produit_prix_text;
      TextView produitPrixText = ViewBindings.findChildViewById(rootView, id);
      if (produitPrixText == null) {
        break missingId;
      }

      return new LayoutProduitBinding((ConstraintLayout) rootView, produitBuyBtn, produitImage,
          produitNomText, produitPrixText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
